{
  "hash": "c2c64097aa325180ab43e5c287a82f20",
  "result": {
    "markdown": "---\ntitle: \"Some words on Lab 4 + help with coefficients\"\nauthor: \"Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#213c96\"\ndate: \"03/18/2024\"\ncategories: [\"Week 10\"]\nformat: \n  revealjs:\n    theme: [default, simple_NW.scss]\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: Quiz and Lab 2\n    html-math-method: mathjax\n    highlight-style: ayu\nexecute:\n  echo: true\n  freeze: auto  # re-render only when source changes\n---\n\n\n# Lab 4\n\n## Overall\n\n-   Interactions: Limit to 1-2 interactions!!\n\n    -   With large sample size, many will come up significant\n    -   Make choice based on your visualizations and previous research\n\n-   When deciding on what covariates to leave in or take out of a model:\n  \n    -   If the covariate is categorical with more than 2 levels, you MUST use F-test!!\n    \n-   Check you HTML document in the report!!\n\n    -   Make sure things look good: proportions and font size should make sense\n    -   Tables and figures should look good!\n    \n    \n-   When looking at % change:\n\n    -   Some only looked at model with explanatory variable and variable in question\n    \n    -   Need to use the model with all other variables as well!!\n\n# Project Report\n\n## Table 1\n\n[Good page on creating a Table 1](https://cran.r-project.org/web/packages/table1/vignettes/table1-examples.html)\n\n## Displaying coefficients\n\n[Helpful source for plotting predictions for variables that are part of interactions!](https://strengejacke.github.io/ggeffects/articles/introduction_plotmethod.html)\n\n-   I would make a table or forest plot for the main effects of my model\n\n    -   Then make a plot showing the interactions\n    \n-   Let's look at it together?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggeffects)\ndat <- predict_response(final_model, terms = c(\"identfat\", \"comptomost\"))\nplot(dat)\n```\n:::\n\n\nSee recording for results!\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}